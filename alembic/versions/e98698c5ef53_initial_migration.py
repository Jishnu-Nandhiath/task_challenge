"""Initial migration

Revision ID: e98698c5ef53
Revises: 
Create Date: 2025-08-12 18:31:20.328042

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e98698c5ef53'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('task_schedules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('task_type', sa.Enum('SLEEP', 'COUNTER', 'HTTP', name='tasktype'), nullable=False),
    sa.Column('interval_seconds', sa.Integer(), nullable=True),
    sa.Column('scheduled_at', sa.DateTime(), nullable=True),
    sa.Column('task_config', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_executed_at', sa.DateTime(), nullable=True),
    sa.Column('next_execution_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_schedules_id'), 'task_schedules', ['id'], unique=False)
    op.create_index(op.f('ix_task_schedules_name'), 'task_schedules', ['name'], unique=False)
    op.create_table('counter_states',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('counter_value', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['task_schedules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_counter_states_id'), 'counter_states', ['id'], unique=False)
    op.create_index(op.f('ix_counter_states_task_id'), 'counter_states', ['task_id'], unique=True)
    op.create_table('task_executions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'COMPLETED', 'FAILED', name='executionstatus'), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('result_data', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('execution_time_ms', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['task_schedules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_executions_id'), 'task_executions', ['id'], unique=False)
    op.create_index(op.f('ix_task_executions_task_id'), 'task_executions', ['task_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_task_executions_task_id'), table_name='task_executions')
    op.drop_index(op.f('ix_task_executions_id'), table_name='task_executions')
    op.drop_table('task_executions')
    op.drop_index(op.f('ix_counter_states_task_id'), table_name='counter_states')
    op.drop_index(op.f('ix_counter_states_id'), table_name='counter_states')
    op.drop_table('counter_states')
    op.drop_index(op.f('ix_task_schedules_name'), table_name='task_schedules')
    op.drop_index(op.f('ix_task_schedules_id'), table_name='task_schedules')
    op.drop_table('task_schedules')
    # ### end Alembic commands ###
